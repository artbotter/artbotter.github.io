{"version":3,"sources":["abis/ArtBlocksFactory.js","scripts/helpers.js","theme.js","components/Spinner/index.js","components/Connect/index.js","components/BidForm/index.js","components/PendingTx/index.js","App.js","reportWebVitals.js","index.js","abis/ArtBlocksBroker.js"],"names":["module","exports","ethers","require","provider","providers","JsonRpcProvider","ABBrokerAbi","ABBrokerInterface","utils","Interface","ABBrokerContract","Contract","ABFactoryAbi","ABFactoryContract","filterStartBlock","getLatestOrdersForUser","user","eventsForUser","a","projectIds","Array","from","Set","map","event","args","_artBlocksProjectId","toString","orders","projectId","eventsForThisUserAndProjectId","filter","length","Error","latestEvent","artBlocksProjectId","priceInWeiEach","_priceInWeiEach","quantity","_quantity","nonEmptyOrders","order","eq","getEventsForUser","filters","Action","fromBlock","getLogs","logs","events","log","parsedLog","parseLog","txHash","transactionHash","getProjectDetails","projectDetails","createTheme","palette","primary","main","secondary","white","overrides","MuiInputLabel","root","color","fontWeight","marginBottom","display","alignItems","MuiTextField","width","MuiFormHelperText","fontSize","lineHeight","marginTop","Spinner","props","className","CircularProgress","size","Connect","wallet","setWallet","ethereum","window","getConnectedWallet","Web3Provider","signer","getSigner","getAddress","signerAddress","prevWallet","connected","console","disabled","error","useEffect","handleConnect","pending","enable","Button","variant","disableElevation","fullWidth","onClick","style","minWidth","BidForm","useState","name","author","setProjectDetails","artBotBrokerAddress","artBotBrokerAbi","bidFields","setBidFields","addPendingTx","updatePendingTxStatus","setUserOrders","retrieveProjectInfo","e","target","value","prevProjectDetails","projectInfo","projectName","artist","handleSubmitTip","bid","parseFloat","toFixed","prevBidFields","projectIdError","bidError","generalError","_","isEmpty","isNaN","parseInt","totalBid","artBotterContract","placeOrder","parseEther","setBidResponse","button","setTimeout","hash","wait","bidResponseUpdate","responseTxHash","prevUserOrders","newUserOrders","push","status","text","sort","first","second","txHashMatch","exec","message","code","errorMessage","replace","noValidate","autoComplete","InputLabel","Tooltip","marginLeft","title","margin","TextField","id","placeholder","helperText","onBlur","onChange","split","quantityError","InputProps","endAdornment","InputAdornment","position","href","rel","PendingTx","tx","marginRight","fill","type","App","metamaskInstalled","setMetamaskInstalled","pendingTxs","setPendingTxs","userOrders","userOrderState","setUserOrderState","prevPendingTxs","concat","txItem","index","prevState","latestUserOrders","item","updateOrderStatus","newStatus","cancelOrder","cancelBidResponse","cancelResponseUpdate","getUserOrders","ThemeProvider","theme","BaseTheme","CssBaseline","substr","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f40e510a.chunk.js","sourcesContent":["module.exports = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_randomizerContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addMintWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_projectName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_artistAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerTokenInWei\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_dynamic\",\"type\":\"bool\"}],\"name\":\"addProject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_script\",\"type\":\"string\"}],\"name\":\"addProjectScript\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"artblocksAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"artblocksPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"clearTokenIpfsImageUri\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"additionalPayee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"additionalPayeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"royaltyFeeByID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMintWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_by\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextProjectId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"overrideTokenDynamicImageWithIpfsLink\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"projectDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"artist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"website\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"license\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dynamic\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIdToAdditionalPayee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIdToAdditionalPayeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIdToArtistAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIdToCurrencyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIdToCurrencySymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIdToPricePerTokenInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIdToSecondaryMarketRoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"projectScriptByIndex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"projectScriptInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"scriptJSON\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"scriptCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useHashString\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"projectShowAllTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"projectTokenInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerTokenInWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"invocations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvocations\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"additionalPayee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"additionalPayeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currencyAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"projectURIInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"projectBaseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectBaseIpfsURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"useIpfs\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomizerContract\",\"outputs\":[{\"internalType\":\"contract Randomizer\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeMintWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"removeProjectLastScript\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"staticIpfsImageLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"toggleProjectIsActive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"toggleProjectIsDynamic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"toggleProjectIsLocked\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"toggleProjectIsPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"toggleProjectUseHashString\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"toggleProjectUseIpfsForStatic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToProjectId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_artblocksAddress\",\"type\":\"address\"}],\"name\":\"updateArtblocksAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_artblocksPercentage\",\"type\":\"uint256\"}],\"name\":\"updateArtblocksPercentage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_additionalPayee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_additionalPayeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateProjectAdditionalPayeeInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_artistAddress\",\"type\":\"address\"}],\"name\":\"updateProjectArtistAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_projectArtistName\",\"type\":\"string\"}],\"name\":\"updateProjectArtistName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_projectBaseIpfsURI\",\"type\":\"string\"}],\"name\":\"updateProjectBaseIpfsURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newBaseURI\",\"type\":\"string\"}],\"name\":\"updateProjectBaseURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_currencySymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_currencyAddress\",\"type\":\"address\"}],\"name\":\"updateProjectCurrencyInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_projectDescription\",\"type\":\"string\"}],\"name\":\"updateProjectDescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"updateProjectIpfsHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_projectLicense\",\"type\":\"string\"}],\"name\":\"updateProjectLicense\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxInvocations\",\"type\":\"uint256\"}],\"name\":\"updateProjectMaxInvocations\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_projectName\",\"type\":\"string\"}],\"name\":\"updateProjectName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerTokenInWei\",\"type\":\"uint256\"}],\"name\":\"updateProjectPricePerTokenInWei\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scriptId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_script\",\"type\":\"string\"}],\"name\":\"updateProjectScript\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_projectScriptJSON\",\"type\":\"string\"}],\"name\":\"updateProjectScriptJSON\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_secondMarketRoyalty\",\"type\":\"uint256\"}],\"name\":\"updateProjectSecondaryMarketRoyaltyPercentage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_projectWebsite\",\"type\":\"string\"}],\"name\":\"updateProjectWebsite\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_randomizerAddress\",\"type\":\"address\"}],\"name\":\"updateRandomizerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","const ethers = require('ethers')\n// const provider = new ethers.providers.JsonRpcProvider('http://127.0.0.1:8545')\nconst provider = new ethers.providers.JsonRpcProvider('https://eth-mainnet.alchemyapi.io/v2/FbqRWPO255vt3CfeI0cKz5qcYuDfUsCb')\n\nconst ABBrokerAddress = '0xE52A2A7B8dACe2ff8cdC64EabB605821A393474D'\nconst ABBrokerAbi = require('../abis/ArtBlocksBroker')\nconst ABBrokerInterface = new ethers.utils.Interface(ABBrokerAbi)\nconst ABBrokerContract = new ethers.Contract(ABBrokerAddress, ABBrokerAbi, provider)\n\nconst ABFactoryAddress = '0xa7d8d9ef8D8Ce8992Df33D8b8CF4Aebabd5bD270'\nconst ABFactoryAbi = require('../abis/ArtBlocksFactory')\nconst ABFactoryInterface = new ethers.utils.Interface(ABFactoryAbi)\nconst ABFactoryContract = new ethers.Contract(ABFactoryAddress, ABFactoryAbi, provider)\n\nconst ABMinterAddress = '0x47e312d99C09Ce61A866c83cBbbbED5A4b9d33E7'\nconst ABMinterABI = [\n\t''\n]\nconst filterStartBlock = 12960687\n\n// use the `getEventsForUser` function to get eventsForUser \nexport async function getUserHistory(eventsForUser) {\n\t// get all events related to this user\n\tconst historyArray = eventsForUser.map(event => {\n\t\tconst action = {\n\t\t\taction: event.args._action,\n\t\t\tartBlocksProjectId: event.args._artBlocksProjectId,\n\t\t\toptionalTokenId: event.args._optionalTokenId,\n\t\t\tpriceInWeiEach: event.args._priceInWeiEach,\n\t\t\tquantity: event.args._quantity,\n\t\t\ttxHash: event.txHash\n\t\t}\n\t\treturn action\n\t})\n\treturn historyArray\n}\n\n// use the `getEventsForUser` function to get eventsForUser \nexport async function getHumanReadableUserHistory(eventsForUser) {\n\tconst userHistory = await getUserHistory(eventsForUser)\n\tconst humanReadableUserHistory = userHistory.map(event => {\n\t\treturn stringifyUserAction(event)\n\t})\n\treturn humanReadableUserHistory\n}\n\nfunction stringifyUserAction(event) {\n\tif (event.action == 'order placed') {\n\t\treturn {\n\t\t\texplanation: `Order placed for projectId: ${event.artBlocksProjectId}. Quantity: ${event.quantity}. Price offered each: ${ethers.utils.formatEther(event.priceInWeiEach)} ETH each.`,\n\t\t\ttransactionHash: event.txHash\n\t\t}\n\t} else if (event.action == 'order cancelled') {\n\t\treturn {\n\t\t\texplanation: `Order cancelled for projectId: ${event.artBlocksProjectId}`,\n\t\t\ttransactionHash: event.txHash\n\t\t}\n\t} else if (event.action == 'order fulfilled') {\n\t\tif (event.quantity.eq('0')) {\n\t\t\t// order was completely fulfilled\n\t\t\treturn {\n\t\t\t\texplanation: `Order fulfilled for projectId: ${event.artBlocksProjectId}. TokenId: ${event.optionalTokenId}`,\n\t\t\t\ttransactionHash: event.txHash\n\t\t\t}\n\t\t} else {\n\t\t\t// order was partially fulfilled\n\t\t\treturn {\n\t\t\t\texplanation: `Order (partially) fulfilled for projectId: ${event.artBlocksProjectId}. TokenId: ${event.optionalTokenId}. There are ${event.quantity} remaining for this order.}`,\n\t\t\t\ttransactionHash: event.txHash\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\texplanation: `Error: unable to parse event`,\n\t\t\ttransactionHash: event.txHash\n\t\t}\n\t}\n}\n\n// use the `getEventsForUser` function to get eventsForUser \nexport async function getLatestOrdersForUser(user, eventsForUser) {\n\t// get the set of all AB project Ids this user has ever created an order for\n\tconst projectIds = Array.from(new Set(eventsForUser.map(event => event.args._artBlocksProjectId.toString())))\n\t// for each project ID, get the user's latest order\n\tconst orders = projectIds.map(projectId => {\n\t\t// get all the logs for this user related to the this project ID\n\t\tconst eventsForThisUserAndProjectId = eventsForUser.filter(event => event.args._artBlocksProjectId == projectId)\n\t\tif (eventsForThisUserAndProjectId.length == []) throw new Error(`logsForThisUserAndProjectId is empty when it shouldn't be. user: ${user}, projectId: ${projectId}`)\n\t\t// logs are chronological, so just grab the latest one\n\t\tconst latestEvent = eventsForThisUserAndProjectId[eventsForThisUserAndProjectId.length - 1]\n\t\treturn {artBlocksProjectId: latestEvent.args._artBlocksProjectId, priceInWeiEach: latestEvent.args._priceInWeiEach, quantity: latestEvent.args._quantity}\n\t})\n\t// filter out those orders that have 0 _quantity\n\tconst nonEmptyOrders = orders.filter(order => !order.quantity.eq('0'))\n\n\treturn nonEmptyOrders\n}\n\n// use the `getEventsForProjectId` function to get eventsForProjectId \nfunction getLatestOrdersForProjectId(eventsForProjectId) {\n\tconst eventsInReversedOrder = eventsForProjectId.reverse()\n\t// go through all the events (in reverse order), grab the latest user order and store it in a Map\n\tconst ordersMap = new Map()\n\teventsInReversedOrder.map(event => {\n\t\tif (!ordersMap.has(event.args._user)) {\n\t\t\tordersMap.set(event.args._user, {user: event.args._user, priceInWeiEach: event.args._priceInWeiEach, quantity: event.args._quantity})\n\t\t}\n\t})\n\tconst ordersArray = Array.from(ordersMap, ([, value]) => value)\n\tconst nonZeroOrders = ordersArray.filter(order => !order.quantity.eq('0'))\n\treturn nonZeroOrders\n}\n\nexport async function getEventsForUser(user) {\n\t// get all events related to this user\n\tconst filter = ABBrokerContract.filters.Action(user)\n\tfilter.fromBlock = filterStartBlock\n\tconst logs = await provider.getLogs(filter)\n\t// console.log(logs)\n\tconst events = logs.map(log => {\n\t\tlet parsedLog = ABBrokerInterface.parseLog(log)\n\t\tparsedLog.txHash = log.transactionHash\n\t\treturn parsedLog\n\t})\n\treturn events\n}\n\nexport async function getEventsForProjectId(projectId) {\n\t// get all events related to this projectId\n\tconst filter = ABBrokerContract.filters.Action(null, projectId)\n\tfilter.fromBlock = filterStartBlock\n\tconst logs = await provider.getLogs(filter)\n\t// console.log(logs)\n\tconst events = logs.map(log => {\n\t\tlet parsedLog = ABBrokerInterface.parseLog(log)\n\t\tparsedLog.txHash = log.transactionHash\n\t\treturn parsedLog\n\t})\n\treturn events\n}\n\nexport async function getAllArtBotterEvents() {\n\t// get all events from the ArtBotter contract\n\tconst filter = ABBrokerContract.filters.Action()\n\tfilter.fromBlock = filterStartBlock\n\tconst logs = await provider.getLogs(filter)\n\t// console.log(logs)\n\tconst events = logs.map(log => {\n\t\tlet parsedLog = ABBrokerInterface.parseLog(log)\n\t\tparsedLog.txHash = log.transactionHash\n\t\treturn parsedLog\n\t})\n\treturn events\n}\n\n// returns a Map(projectId => array of orders sorted from highest to lowest price offered)\nexport async function getSortedOrdersForAllProjects() {\n\tconst allEvents = await getAllArtBotterEvents()\n\tconst projectIds = Array.from(new Set(allEvents.map(event => event.args._artBlocksProjectId.toString())))\n\tconst orders = new Map()\n\tprojectIds.map(projectId => {\n\t\tconst eventsForProjectId = getEventsForProjectIdFromAllEvents(projectId, allEvents)\n\t\tconst latestOrders = getLatestOrdersForProjectId(eventsForProjectId)\n\t\t// sort latestOrders based on price offered\n\t\tconst sortedOrders = latestOrders.sort((a,b) => a.gt(b))\n\t\torders.set(projectId, sortedOrders)\n\t})\n\treturn orders\n}\n\nfunction getEventsForProjectIdFromAllEvents(projectId, allEvents) {\n\treturn allEvents.filter(event => event.args._artBlocksProjectId.eq(projectId))\n}\nexport async function getProjectDetails(projectId) {\n\tconst projectDetails = await ABFactoryContract.projectDetails(projectId)\n\treturn projectDetails\n}\n\nexport async function getProjectScriptInfo(projectId) {\n\tconst scriptInfo = await ABFactoryContract.projectScriptInfo(projectId)\n\treturn scriptInfo\n}\n\nexport async function getProjectTokenInfo(projectId) {\n\tconst tokenInfo = await ABFactoryContract.projectTokenInfo(projectId)\n\treturn tokenInfo\n}\n\nexport async function canMint(projectId) {\n\tconst minterAllowed = await ABFactoryContract.isMintWhitelisted(ABMinterAddress)\n\tif (!minterAllowed) throw new Error(`Minter contract has been changed. It is no longer ${ABMinterAddress}`)\n\n\tconst tokenInfo = await getProjectTokenInfo(projectId)\n\t// must not exceed max invocations on factory contract\n\tif (tokenInfo.invocations.gte(tokenInfo.maxInvocations)) {\n\t\tconsole.log(`project ${projectId} is sold out`)\n\t\treturn false;\n\t} \n\t// must be active\n\tif (!tokenInfo.active) {\n\t\tconsole.log(`project ${projectId} is not active`)\n\t\treturn false;\n\t}\n\tconst scriptInfo = await getProjectScriptInfo(projectId)\n\t// must not be paused\n\tif (scriptInfo.paused) {\n\t\tconsole.log(`project ${projectId} is paused by artist`)\n\t\treturn false;\n\t}\n\t// check that maxInvocations has been set on the minter contract\n\t// TODO\n\n\t// check that maxMints has been set on the minter contract\n\t// TODO\n\n\treturn true\n}\n","import { createTheme } from '@material-ui/core/styles'\n\nexport default createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#1de9b6',\n    },\n    white: {\n      main: '#ffffff',\n    }\n  },\n  overrides: {\n    MuiInputLabel: {\n      root: {\n        color: '#000',\n        fontWeight: 'bold',\n        marginBottom: '0.5rem',\n        display: 'flex',\n        alignItems: 'center'\n      }\n    },\n    MuiTextField: {\n      root: {\n        width: '100%'\n      }\n    },\n    MuiFormHelperText: {\n      root: {\n        '&.Mui-error': {\n          fontWeight: 'bold',\n          fontSize: '0.9rem',\n          lineHeight: '1rem',\n          marginTop: '0.5rem'\n        }\n      }\n    }\n  }\n})\n","import { CircularProgress } from '@material-ui/core'\n\nimport './style.css'\n\nexport default function Spinner(props) {\n  return (\n    <div className=\"Spinner\">\n      <CircularProgress size={20} color=\"inherit\" />\n    </div>\n  )\n}","import { Fragment, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { Button } from '@material-ui/core'\nimport ErrorIcon from '@material-ui/icons/Error'\n\nimport Spinner from './../Spinner'\n\nexport default function Connect(props) {\n\n  const { \n    wallet, \n    setWallet } = props\n\n  const ethereum = window.ethereum\n\n  async function getConnectedWallet() {\n    try {\n      // Attempt to get the provider from Metamask\n      const provider = new ethers.providers.Web3Provider(ethereum)\n\n      try {\n        // Test whether the Metamask account has already been connected\n        const signer = provider.getSigner()\n        const signerAddress = await signer.getAddress()\n        // If getAddress doesn't throw an error, then hypothetically the user's Metamask account is connected\n        setWallet(prevWallet => {\n          return { ...prevWallet, provider, signer, connected: true, signerAddress }\n        })\n      } catch(err) {\n        // error is thrown by getAddress if user is not connnected\n        // Error: unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, version=providers/5.0.17)\n        console.log('Your Metamask account is not connected. Please click \"Connect Wallet\" to connect your Metamask account.')\n      }\n    } catch(err) {\n      // error is thrown if user does not have Metamask installed\n      // Error: missing provider (argument=\"provider\", value=undefined, code=INVALID_ARGUMENT, version=providers/5.0.17)\n      setWallet(prevWallet => {\n        return { ...prevWallet, disabled: true, error: 'You must install the Metamask browser plugin before you can connect a wallet.'}\n      })\n    }\n  }\n\n  useEffect(() => {\n    getConnectedWallet()\n  }, [])\n\n  const handleConnect = async () => {\n    setWallet(prevWallet => {\n      return {...prevWallet, pending: true, error: ''}\n    })\n\n    try { \n      await ethereum.enable()\n      await getConnectedWallet()\n\n      setWallet(prevWallet => {\n        return {...prevWallet, pending: false}\n      })\n    } catch (err) {\n      // error is thrown if user rejects connection.\n      // {code: 4001, message: \"User rejected the request.\"}\n      setWallet(prevWallet => {\n        return {...prevWallet, pending: false, error: 'User rejected the request.'}\n      })\n    }\n  }\n\n  return (\n    <Fragment>\n      <Button variant=\"contained\" color=\"primary\" disableElevation fullWidth onClick={handleConnect} disabled={wallet.disabled} style={{ minWidth: '194px' }}>\n        { wallet.pending ? \n            <Spinner />\n          :\n            'Connect Wallet'\n        }\n      </Button>\n      { wallet.error.length > 0 &&\n        <div className=\"Message--error\">\n          <ErrorIcon fontSize=\"small\" />\n          <p>{ wallet.error }</p>\n        </div>\n      }\n    </Fragment>\n  )\n}\n","import { useState } from 'react'\nimport { ethers } from 'ethers'\nimport _ from 'lodash'\n\nimport { Button, InputAdornment, InputLabel, TextField, Tooltip } from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\n\nimport Spinner from './../Spinner'\n\nimport { getProjectDetails } from './../../scripts/helpers'\n\nexport default function BidForm(props) {\n  const [ projectDetails, setProjectDetails ] = useState({\n    name: '',\n    author: ''\n  })\n\n  const { artBotBrokerAddress, artBotBrokerAbi, wallet, bidFields, setBidFields, addPendingTx, updatePendingTxStatus, setUserOrders } = props\n\n  const retrieveProjectInfo = async (e) => {\n    if (e.target.value === '') {\n      setProjectDetails(prevProjectDetails => {\n        return { ...prevProjectDetails, name: '', author: '' }\n      })\n    } else {\n      const projectInfo = await getProjectDetails(e.target.value)\n      setProjectDetails(prevProjectDetails => {\n        return { ...prevProjectDetails, name: projectInfo.projectName, author: projectInfo.artist }\n      })\n    }\n  }\n\n  // Handle the tip form submission\n  const handleSubmitTip = async () => {\n\n    const projectId = bidFields.projectId,\n          quantity = bidFields.quantity,\n          bid = parseFloat(bidFields.bid).toFixed(4)\n\n    setBidFields(prevBidFields => {\n      return { ...prevBidFields, pending: true, projectIdError: '', bidError: '', generalError: '' }\n    })\n\n    // Error checking\n    if (!wallet.connected || _.isEmpty(wallet.signer)) {\n      setBidFields(prevBidFields => {\n        return { ...prevBidFields, pending: false, generalError: 'Please connect your wallet.' }\n      })\n      return\n    }\n    if (isNaN(parseInt(projectId)) || typeof parseInt(projectId) !== 'number' || projectId < 0) {\n      setBidFields(prevBidFields => {\n        return { ...prevBidFields, pending: false, projectIdError: 'Please enter the ID of an existing ArtBlocks project.' }\n      })\n      return\n    }\n    if (isNaN(parseInt(quantity)) || typeof parseInt(quantity) !== 'number' || quantity < 0) {\n      setBidFields(prevBidFields => {\n        return { ...prevBidFields, pending: false, projectIdError: 'Please enter a valid quantity.' }\n      })\n      return\n    }\n    if (isNaN(bid) || typeof bid !== 'number') {\n      setBidFields(prevBidFields => {\n        return { ...prevBidFields, pending: false, bidError: 'Please enter a valid bid.' }\n      })\n      return\n    }\n    if (bid <= 0) {\n      setBidFields(prevBidFields => {\n        return { ...prevBidFields, pending: false, bidError: 'You must bid more than 0 ETH.' }\n      })\n      return\n    }\n\n    try {\n      // Submit bid transaction to the blockchain\n      const totalBid = (bid * parseInt(quantity)).toFixed(4).toString()\n\n      const artBotterContract = new ethers.Contract(artBotBrokerAddress, artBotBrokerAbi, wallet.signer)\n      const setBidResponse = await artBotterContract.placeOrder(projectId, quantity, { value: ethers.utils.parseEther(totalBid) })\n\n      // Show submission success\n      setBidFields(prevBidFields => {\n        return { \n          ...prevBidFields, \n          pending: false, \n          button: 'Submitted!' \n        }\n      })\n      window.setTimeout(() => { \n        setBidFields(prevBidFields => {\n          return { ...prevBidFields, button: 'Place Bid' }\n        })\n      }, 2000)\n\n\n      // Update state with pending transaction information\n      addPendingTx(`Project ${projectId}`, quantity, bid, setBidResponse.hash, 'Placed')\n\n      window.setTimeout(() => { \n        setBidFields(prevBidFields => {\n          return { ...prevBidFields, button: 'Place Bid' }\n        })\n      }, 2000)\n\n      // Update the UI when the pendingBid transaction succeeds or fails\n      try {\n        const bidResponseUpdate = await setBidResponse.wait()\n        const responseTxHash = bidResponseUpdate.transactionHash\n\n        // Update the pendingTx status to \"confirmed\"\n        updatePendingTxStatus(responseTxHash, 'confirmed')\n\n        // Add the order to the list of user orders\n        setUserOrders(prevUserOrders => {\n          const newUserOrders = [...prevUserOrders]\n          newUserOrders.push({ \n            projectId, \n            quantity, \n            bid, \n            status: 'placed',\n            text: 'cancel' \n          })\n          const sortedOrders = newUserOrders.sort((first, second) => (first.projectId > second.projectId) ? -1 : 1)\n\n          return sortedOrders\n        })\n\n      } catch(err) {\n        console.log(err)\n        const txHashRegex = /transactionHash=\"([a-z0-9]*)\"/gi\n        const txHashMatch = txHashRegex.exec(err.message)\n        const responseTxHash = txHashMatch[1]\n        \n        // Update the pendingTx status to \"failed\"\n        updatePendingTxStatus(responseTxHash, 'failed')\n      }\n\n    } catch(err) {\n\n      console.log(err.code)\n\n      let errorMessage = ''\n      //console.log(err.code, err.data)\n      switch (err.code) {\n        // Error: user rejects transaction\n        // MetaMask - RPC Error: MetaMask Tx Signature: User denied transaction signature. {code: 4001, message: \"MetaMask Tx Signature: User denied transaction signature.\"}\n        case 4001:\n          errorMessage = 'User denied transaction signature.'\n          break\n        // Error: user has insufficient funds\n        // MetaMask - RPC Error: err: insufficient funds for gas * price + value. {code: -32000, message: \"err: insufficient funds for gas * price + value: a…want 12000000000000000000 (supplied gas 15054442)\"}\n        case 'INSUFFICIENT_FUNDS':\n          errorMessage = 'Insufficient funds.'\n          break\n        // Contract errors\n        case 'UNPREDICTABLE_GAS_LIMIT':\n          errorMessage = err.error.message.replace('execution reverted: ', '').replace('invalid AB id', 'Please enter a valid ArtBlocks project ID.')\n          break\n        default:\n          errorMessage = 'Sorry, something went wrong. Please try again.'\n      }\n\n      setBidFields(prevBidFields => {\n        return { ...prevBidFields, pending: false, generalError: errorMessage }\n      })\n    }\n  }\n\n  return (\n    <form className=\"OrderForm\" noValidate autoComplete=\"off\">\n      <div className=\"OrderForm__fields\">\n        <div>\n          <InputLabel>\n            Art Blocks Project ID \n            <Tooltip style={{ marginLeft: '0.25rem' }} title={<p style={{ margin: 0 }}>Enter the project ID number associated with the ArtBlocks project that you'd like to bid on. You can find the ID in the url of the project's page on the ArtBlocks website (ex: artblocks.io/project/116).</p>}>\n                <HelpIcon fontSize=\"small\" />\n            </Tooltip>\n          </InputLabel>\n          <TextField \n            id=\"artblocks-project-id\" \n            variant=\"standard\"\n            placeholder=\"ex: 116\"\n            value={bidFields.projectId}\n            error={bidFields.projectIdError.length > 0}\n            helperText={bidFields.projectIdError}\n            onBlur={retrieveProjectInfo}\n            disabled={bidFields.pending}\n            onChange={(e) => {\n              // Make sure only integers are allowed\n              // Note: We are not using the \"number\" field type because\n              // the user was able to enter \"-\", and when the user did so\n              // the onChange event would not fire\n              const value = (e.target.value).replace(/[^0-9]/gi, '')\n\n              // Limit the entered text to zero decimals\n              const decimalCount = (value.split('.')[1] || '').length\n              const projectId = decimalCount < 1 ? value : parseFloat(value).toFixed(0)\n              setBidFields({ ...bidFields, projectId, projectIdError: '', generalError: '' })\n            }}\n          />\n        </div>\n        <div>\n          <InputLabel>\n            Quantity\n            <Tooltip style={{ marginLeft: '0.25rem' }} title={<p style={{ margin: 0 }}>Enter the maximum quantity of NFTs you'd like to purchase from this project.</p>}>\n                <HelpIcon fontSize=\"small\" />\n            </Tooltip>\n          </InputLabel>\n          <TextField \n            id=\"price-to-offer\" \n            variant=\"standard\"\n            placeholder=\"ex: 4\"\n            value={bidFields.quantity}\n            error={bidFields.quantityError.length > 0}\n            helperText={bidFields.quantityError}\n            disabled={bidFields.pending}\n            onChange={(e) => {\n              // Make sure only numbers and decimals are allowed\n              // Note: We are not using the \"number\" field type because\n              // the user was able to enter \"-\", and when the user did so\n              // the onChange event would not fire\n              const value = (e.target.value).replace(/[^0-9]/gi, '')\n\n              // Limit the entered text to zero decimals\n              const decimalCount = (value.split('.')[1] || '').length\n              const quantity = decimalCount < 5 ? value : parseFloat(value).toFixed(4)\n              setBidFields({ ...bidFields, quantity, quantityError: '', generalError: '' })\n            }}\n          />\n        </div>\n        <div>\n          <InputLabel>\n            Bid per NFT\n            <Tooltip style={{ marginLeft: '0.25rem' }} title={<p style={{ margin: 0 }}>Enter the amount you want to bid per individual NFT. This amount needs to be at least the minimum price set by the artist plus the transaction fee you are willing to pay. Higher bids will be filled first.</p>}>\n                <HelpIcon fontSize=\"small\" />\n            </Tooltip>\n          </InputLabel>\n          <TextField \n            id=\"price-to-offer\" \n            variant=\"standard\"\n            placeholder=\"ex: 3.1250\"\n            value={bidFields.bid}\n            error={bidFields.bidError.length > 0}\n            helperText={bidFields.bidError}\n            disabled={bidFields.pending}\n            onChange={(e) => {\n              // Make sure only numbers and decimals are allowed\n              // Note: We are not using the \"number\" field type because\n              // the user was able to enter \"-\", and when the user did so\n              // the onChange event would not fire\n              const value = (e.target.value).replace(/[^0-9.]/gi, '')\n\n              // Limit the entered text to four decimals\n              const decimalCount = (value.split('.')[1] || '').length\n              const bid = decimalCount < 5 ? value : parseFloat(value).toFixed(4)\n              setBidFields({ ...bidFields, bid, bidError: '', generalError: '' })\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">ETH</InputAdornment>,\n            }}\n          />\n        </div>\n      </div>\n      <p className=\"OrderForm__fields-description\">You are offering to buy up to <b>{bidFields.quantity || 0} <a href={`https://artblocks.io/project/${bidFields.projectId}`} target=\"_blank\" rel=\"noreferrer\">{projectDetails.name} NFT{parseInt(bidFields.quantity) === 1 ? '' : 's'}</a></b> {projectDetails.author && `by ${projectDetails.author}`} for <b>{bidFields.bid || 0} ETH</b> each. Your total cost is <b>{(bidFields.bid > 0 && bidFields.quantity > 0) ? ((parseFloat(bidFields.bid).toFixed(4) * parseInt(bidFields.quantity))).toFixed(4).toString() : '0'} ETH</b>.</p>\n      { bidFields.generalError &&\n        <p className=\"OrderForm__general-error\">{bidFields.generalError}</p>\n      }\n      <div className=\"OrderForm__submit\">\n        <Button variant=\"contained\" color=\"primary\" disableElevation onClick={handleSubmitTip} disabled={bidFields.projectId === '' || bidFields.bid === '' || bidFields.projectIdError.length > 0 || bidFields.bidError.length > 0}>\n          { bidFields.pending ? \n              <Spinner />\n            :\n              bidFields.button\n          }\n        </Button>\n      </div>\n    </form>\n  )\n}\n","// import { Fragment } from 'react'\n\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined'\n\nexport default function PendingTx(props) {\n\n  const { tx } = props\n\n  return (\n    <div className=\"PendingTx\">\n      { tx.status === 'pending' &&\n        <AccessTimeIcon fontSize=\"small\" style={{ marginRight: '0.4rem', fill: '#ffb64b' }} />\n      }\n      { tx.status === 'confirmed' &&\n        <CheckCircleOutlineIcon fontSize=\"small\" style={{ marginRight: '0.4rem', fill: '#1de9b6' }} />\n      }\n      { tx.status === 'failed' &&\n        <ReportProblemOutlinedIcon fontSize=\"small\" style={{ marginRight: '0.4rem', fill: '#dc004e' }} />\n      }\n      <div>\n        <h4>\n          <a href={`https://etherscan.io/tx/${tx.hash}`} target=\"_blank\" rel=\"noreferrer\">\n            { tx.status === 'pending' &&\n              <span style={{color: '#ffb64b'}}> Transaction Pending</span>\n            }\n            { tx.status === 'confirmed' &&\n              <span style={{color: '#1de9b6'}}> Transaction Confirmed</span>\n            }\n            { tx.status === 'failed' &&\n              <span style={{color: '#dc004e'}}> Transaction Failed</span>\n            }\n          </a>\n        </h4>\n        <h5>\n          <a href={`https://etherscan.io/tx/${tx.hash}`} target=\"_blank\" rel=\"noreferrer\">\n            <b>Bid {tx.type} &middot; </b>{tx.quantity} NFT{ (tx.quantity > 1) ? 's' : ''} from {tx.projectName} for {tx.bid} ETH each\n          </a>\n        </h5>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { ethers } from 'ethers'\nimport { getEventsForUser, getLatestOrdersForUser } from './scripts/helpers'\n\nimport BaseTheme from './theme.js'\nimport './App.css'\n\nimport { Container } from '@material-ui/core'\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\n\nimport Spinner from './components/Spinner'\nimport Connect from './components/Connect'\nimport BidForm from './components/BidForm'\nimport PendingTx from './components/PendingTx'\n\nimport artBotBrokerAbi from './abis/ArtBlocksBroker'\n\nexport default function App() {\n\n  const artBotBrokerAddress = '0xE52A2A7B8dACe2ff8cdC64EabB605821A393474D'\n\n  const [ wallet, setWallet ] = useState({\n    provider: null,\n    signer: null,\n    connected: false,\n    signerAddress: null,\n    disabled: false,\n    pending: false,\n    error: ''\n  })\n  const [ metamaskInstalled, setMetamaskInstalled ] = useState(true)\n\n  const [ bidFields, setBidFields ] = useState({\n    projectId: '',\n    projectIdError: '',\n    quantity: '',\n    quantityError: '',\n    bid: '',\n    bidError: '',\n    generalError: '',\n    pending: false,\n    button: 'Place Bid'\n  })\n\n  const [ pendingTxs, setPendingTxs ] = useState([\n    // {\n    //   projectName: 'Pilones',\n    //   quantity: '2',\n    //   bid: '1.2592',\n    //   hash: '0x8b132b821b4f308fcf0ce60b0c2373e8b8fc5a19bc5abd2973e059ff11dc0a25',\n    //   type: 'Placed',\n    //   status: 'pending'\n    // },\n    // {\n    //   projectName: 'Lunar Eclipse',\n    //   quantity: '4',\n    //   bid: '0.25',\n    //   hash: '0x8b132b821b4f308fcf0ce60b0c2373e8b8fc5a19bc5abd2973e059ff11dc0a25',\n    //   type: 'Canceled',\n    //   status: 'failed'\n    // }\n  ])\n\n  const [ userOrders, setUserOrders ] = useState([])\n  const [ userOrderState, setUserOrderState ] = useState('')\n\n  function addPendingTx(projectName, quantity, bid, hash, type) {\n    setPendingTxs(prevPendingTxs => {\n      return prevPendingTxs.concat({\n        projectName,\n        quantity,\n        bid,\n        hash,\n        type,\n        status: 'pending'\n      })\n    })\n  }\n\n  function updatePendingTxStatus(hash, status) {\n    setPendingTxs(prevPendingTxs => {\n      return prevPendingTxs.map((txItem, index) => {\n        if (txItem.hash === hash) {\n          return { ...txItem, status }\n        } else {\n          return txItem\n        }\n      })\n    })\n\n    // Hide the pending tx box after a couple seconds\n    window.setTimeout(() => { \n      setPendingTxs(prevPendingTxs => {\n        return prevPendingTxs.filter(txItem => txItem.hash !== hash)\n      })\n    }, 5000)\n  }\n\n  async function getUserOrders() {\n    setUserOrderState(prevState => 'pending')\n    try {\n      if (wallet.connected) {\n        const eventsForUser = await getEventsForUser(wallet.signerAddress)\n        const latestUserOrders = await getLatestOrdersForUser(wallet.signerAddress, eventsForUser)\n\n        setUserOrders(latestUserOrders.map((order, item) => { \n          return { \n            projectId: order.artBlocksProjectId.toString(), \n            quantity: order.quantity.toString(), \n            bid: order.priceInWeiEach.toString() / 1e18, \n            status: 'placed',\n            text: 'cancel' \n          }\n        }).sort((first, second) => (first.projectId > second.projectId) ? -1 : 1))\n\n        setUserOrderState(prevState => '')\n      }\n    } catch(err) {\n      console.log(err)\n      setUserOrderState(prevState => 'error')\n    }\n  }\n\n  async function cancelOrder(projectId, quantity, bid) {\n\n    function updateOrderStatus(newStatus) {\n      setUserOrders(prevUserOrders => {\n        return prevUserOrders.map(order => {\n          if (order.projectId === projectId) {\n            order.status = newStatus\n          }\n          return order\n        })\n      })\n    }\n\n    try {\n\n      updateOrderStatus('pending')\n\n      const artBotterContract = new ethers.Contract(artBotBrokerAddress, artBotBrokerAbi, wallet.signer)\n      const cancelBidResponse = await artBotterContract.cancelOrder(projectId)\n\n      // Add the cancel tx to the Pending Txs notifications\n      addPendingTx(`Project ${projectId}`, quantity, bid, cancelBidResponse.hash, 'Canceled')\n\n      // Change the \"cancel\" text to \"pending cancel\"\n      setUserOrders(prevUserOrders => {\n        return prevUserOrders.map(order => {\n          if (order.projectId === projectId) {\n            order.status = 'txPending'\n            order.text = '(cancel pending)'\n          }\n          return order\n        })\n      })\n\n      // Update the UI when the cancelOrder transaction succeeds or fails\n      try {\n        const cancelResponseUpdate = await cancelBidResponse.wait()\n        const responseTxHash = cancelResponseUpdate.transactionHash\n\n        // Update the pendingTx status to \"confirmed\"\n        updatePendingTxStatus(responseTxHash, 'confirmed')\n\n        // Remove order from list of user orders\n        setUserOrders(prevUserOrders => prevUserOrders.filter(order => order.projectId !== projectId))\n\n      } catch(err) {\n        console.log(err)\n        const txHashRegex = /transactionHash=\"([a-z0-9]*)\"/gi\n        const txHashMatch = txHashRegex.exec(err.message)\n        const responseTxHash = txHashMatch[1]\n        \n        // Update the pendingTx status to \"failed\"\n        updatePendingTxStatus(responseTxHash, 'failed')\n        updateOrderStatus('placed')\n      }\n\n    } catch(err) {\n\n      updateOrderStatus('placed')\n\n    }\n\n  }\n\n  useEffect(() => {\n    getUserOrders()\n  }, [wallet])\n\n  return (\n    <ThemeProvider theme={BaseTheme}>\n      <CssBaseline />\n      <div className=\"Header\">\n        <h1>ArtBotter</h1>\n        <div>\n          { wallet.connected ?\n              <div className=\"Header__connected\">\n                <span><CheckCircleIcon color=\"secondary\" style={{ marginRight: '0.5rem' }} /> Wallet Connected</span>\n                <span>{ wallet.signerAddress.substr(0,8) + '...' + wallet.signerAddress.substr(-5) }</span>\n              </div>\n            :\n              <div>\n                <Connect \n                  wallet={wallet} \n                  setWallet={setWallet} \n                  metamaskInstalled={metamaskInstalled} \n                  setMetamaskInstalled={setMetamaskInstalled} />\n              </div>\n          }\n        </div>\n      </div>\n      <Container className=\"Page\" maxWidth=\"sm\">\n        <div className=\"Body\">\n\n          <div className=\"Body__section Body__about\">\n            <h2>About ArtBotter</h2>\n            <p>ArtBotter makes purchase-via-bot accessible to all Art Blocks buyers so you have the best chance possible to purchase the art you love.</p>\n            <p>Place a bid below on an Art Blocks project before it drops and bots will compete to mint an NFT for you as soon as they become available at your designated price. If the drop sells out before your order is filled, simply cancel your bid for a full refund.</p>\n            <p>ArtBotter is a trustless marketplace: When you place a bid, your money is held in escrow and can be retrieved at any time by canceling the bid before it's filled. Your money is only sent to a bot when they have successfully filled your order.</p>\n            \n            <p>Bots attempt to fill the highest bids first. See the question \"How much should I offer to pay?\" below for some thoughts on what to bid.</p>\n          </div>\n\n          <div className=\"Body__section Body__order\">\n            <div>\n              <div className=\"Step__action\">\n                <h3>Place a Bid</h3>\n                <p>Choose an Art Blocks project ID, the maximum number of NFTs you want to purchase, and the amount of ETH you're offering to pay for each of them.</p>\n                <BidForm \n                  artBotBrokerAddress={artBotBrokerAddress} \n                  artBotBrokerAbi={artBotBrokerAbi} \n                  wallet={wallet} \n                  bidFields={bidFields} \n                  setBidFields={setBidFields}\n                  pendingTxs={pendingTxs}\n                  setPendingTxs={setPendingTxs}\n                  addPendingTx={addPendingTx}\n                  updatePendingTxStatus={updatePendingTxStatus}\n                  setUserOrders={setUserOrders}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Body__section Body__open-orders\">\n            <div>\n              <div className=\"Step__action\">\n                <h3>Your Open Bids</h3>\n                { !wallet.connected && \n                  <div className=\"OpenOrders__not-connected\">\n                    <p>Connect your wallet to see your open bids.</p>\n                  </div>\n                }\n                { wallet.connected && userOrderState === 'pending' &&\n                  <div className=\"OpenOrders__pending\">\n                    <Spinner />\n                  </div>\n                }\n                { wallet.connected && userOrderState === 'error' &&\n                  <div className=\"OpenOrders__error\">\n                    <p>Sorry, something went wrong. Please refresh to attempt fetching orders again.</p>\n                  </div>\n                }\n                { wallet.connected && userOrderState === '' && userOrders.length === 0 &&\n                  <div className=\"OpenOrders__no-orders\">\n                    <p>You currently have no open bids.</p>\n                  </div>\n                }\n                { wallet.connected && userOrderState === '' && userOrders.length > 0 &&\n                  <ul className=\"OpenOrders__list\">\n                    { userOrders.map((order, index) => {\n                        return <li key={index} className={order.status !== 'placed' ? 'disabled' : ''}>\n                                <b>Project {order.projectId}: </b> {order.quantity} NFT{parseInt(order.quantity) === 1 ? '' : 's'} for {order.bid} ETH each. \n                                <span className=\"OpenOrders__item-cancel\" onClick={() => cancelOrder(order.projectId, order.quantity, order.bid)}>\n                                  { order.status === 'pending' ?\n                                    <Spinner />\n                                    :\n                                    order.text\n                                  }\n                                </span>\n                              </li>\n                      })\n                    }\n                  </ul>\n                }\n              </div>\n            </div>\n          </div>\n\n          {/*<div className=\"Body__section Body__all-open-orders\">\n            <div>\n              <div className=\"Step__action\">\n                <h3>See Your Competition</h3>\n                <p>Enter an Art Blocks project ID to see a list of all open ArtBotter orders for that project.</p>\n                <ul className=\"AllOpenOrders__list\">\n                  <li><span>1. </span>1.4000 ETH</li>\n                  <li><span>2. </span>1.3500 ETH</li>\n                  <li><span>3. </span>0.8555 ETH</li>\n                  <li><span>4. </span>0.8554 ETH</li>\n                  <li><span>5. </span>0.8000 ETH</li>\n                  <li><span>6. </span>0.8000 ETH</li>\n                  <li><span>7. </span>0.8000 ETH</li>\n                  <li><span>8. </span>0.8000 ETH</li>\n                  <li><span>9. </span>0.8000 ETH</li>\n                  <li><span>10. </span>0.7500 ETH</li>\n                  <li><span>11. </span>0.7000 ETH</li>\n                  <li><span>12. </span>0.7000 ETH</li>\n                  <li><span>13. </span>0.7000 ETH</li>\n                  <li><span>14. </span>0.7000 ETH</li>\n                </ul>\n              </div>\n            </div>\n          </div>*/}\n\n          <div className=\"PendingTxs\">\n            { \n              pendingTxs.map((tx, index) => {\n                return <PendingTx tx={tx} key={index} />  \n              })\n            }\n          </div>\n\n          <div className=\"Body__section Body__faq\">\n            <h2>Frequently Asked Questions</h2>\n            <dl className=\"FAQ__list\">\n              <dt>Have the ArtBotter smart contracts been audited?</dt>\n              <dd>No. The code is open source, anyone is free to <a href=\"https://etherscan.io/address/0xE52A2A7B8dACe2ff8cdC64EabB605821A393474D#code\">check it out</a>, and it is straightforward to analyze. But the code has not been audited, and you should not send it more money than you'd be happy setting on fire. We're definitely \"testing in prod\" here. If you lose money, there is exactly nothing we can do for you. You won't be reimbursed in any way. We did our best, and we'll be trusting the contract with our own money, but this is alpha software and you should treat it as such.</dd>\n\n              <dt>How much should I offer to pay?</dt>\n              <dd>\n                <p>That's up to you! But here are some things to keep in mind. Bots won't try to fill your bid unless you incentivize them to -- they aren't going to mint your NFTs at a loss to themselves. Bots have to compete on gas just like everyone else. They have some tricks to minimize costs here and there, but for the most part they'll pay as much as anyone else to mint the NFTs. So to be considered at all, table stakes are to offer at least the minting price plus an additional amount to be competitive on gas.</p>\n                <p>ArtBotter won't help you buy the NFTs more cheaply than you could mint them on your own. Instead, it will (a) help you be faster so you are more likely to get an NFT before they sell out, and (b) ensures you don't ever lose money on reverting transactions. So you can bid as high as you would if you were gas warring by yourself, but without the risk of losing money on reverting transactions.</p>\n                <p>Additionally, with ArtBotter you can order as many NFTs as you want -- even if there is a minting limit per address imposed by Art Blocks.</p>\n              </dd>\n\n              <dt>Can I submit bids for more than one NFT per project?</dt>\n              <dd>Yes. With ArtBotter you can ask for as many NFTs as you want -- even if the Art Blocks project has a limit of one NFT mint per account.</dd>\n\n              <dt>Can I submit bids for multiple Art Blocks projects at once?</dt>\n              <dd>Yes. You can place bids for as many projects as you want.</dd>\n\n              <dt>What happens if I bid on an NFT but don't win it?</dt>\n              <dd>Simply cancel your bid for a full refund. No problem.</dd>\n\n              <dt>Can my bid be partially filled?</dt>\n              <dd>Yes. For example, suppose you place a bid for 10 NFTs offering to pay 1 ETH each, so you've deposited 10 ETH into ArtBotter. It is possible the bots will only manage to get 7 of the NFTs for you. You could then cancel the remainder of your bid (3 NFTs) and get the remainder of your deposit (3 ETH) back.</dd>\n\n              <dt>How do I increase or decrease my bid after placing it?</dt>\n              <dd>To increase or decrease your bid you must first cancel your existing bid, and then place a new bid.</dd>\n\n              <dt>Are there any fees?</dt>\n              <dd>Bots that fill orders through ArtBotter pay a fee to ArtBotter. Users pay no fees at all.</dd>\n\n              <dt>Can I specify an individual tokenId that I want?</dt>\n              <dd>No. When you place a bid for a NFT, you specify a particular Art Blocks project ID, and your bid can be filled with any NFT from that project. You may end up with \"floor price\" NFTs or rare NFTs. You never know.</dd>\n\n              <dt>Does ArtBotter work if the project uses a Dutch auction?</dt>\n              <dd>Yes. ArtBotter works with any possible initial distribution mechanism, including auctions. The smart contract is completely agnostic to the initial distribution method and any restrictions on them (e.g. limited minting requirements, no-contract purchases, etc). ArtBotter users never need to worry about any of that. The bots will handle it. You make a large enough offer for some NFTs, and the bots will do whatever it takes to get them for you.</dd>\n\n              <dt>Can I order an NFT that requires something other than ETH to mint?</dt>\n              <dd>Yes, ArtBotter can fill orders for NFTs that require something other than ETH to mint. However, when you create an order on ArtBotter, you must make your offer in ETH.</dd>\n\n              <dt>Is ArtBotter run by Art Blocks?</dt>\n              <dd>No. ArtBotter was created and is maintained by an Art Blocks fan and community member, and the bots are run by some folks from the FlashBots community. ArtBotter has no official affiliation with Art Blocks.</dd>\n\n              <dt>How do I get in touch with someone about ArtBotter?</dt>\n              <dd>You can reach out to artbotter#9447 in the Art Blocks discord :)</dd>\n            </dl>\n          </div>\n\n        </div>\n      </Container>\n    </ThemeProvider>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_profitReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_artBlocksBrokerFeeBips\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_artBlocksProjectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_priceInWeiEach\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_optionalTokenId\",\"type\":\"uint256\"}],\"name\":\"Action\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARTBLOCKS_FACTORY\",\"outputs\":[{\"internalType\":\"contract IArtBlocksFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"artBlocksBrokerFeeBips\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_artBlocksProjectId\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newArtBlocksBrokerFeeBips\",\"type\":\"uint256\"}],\"name\":\"changeArtBlocksBrokerFeeBips\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCoordinator\",\"type\":\"address\"}],\"name\":\"changeCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newProfitReceiver\",\"type\":\"address\"}],\"name\":\"changeProfitReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_user\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_artBlocksProjectId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_expectedPriceInWeiEach\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_profitTo\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_sendNow\",\"type\":\"bool[]\"}],\"name\":\"fulfillMultipleOrders\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_artBlocksProjectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expectedPriceInWeiEach\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_profitTo\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_sendNow\",\"type\":\"bool\"}],\"name\":\"fulfillOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"priceInWeiEach\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"quantity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_artBlocksProjectId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"_quantity\",\"type\":\"uint128\"}],\"name\":\"placeOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_artBlocksProjectId\",\"type\":\"uint256\"}],\"name\":\"viewOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"priceInWeiEach\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"quantity\",\"type\":\"uint128\"}],\"internalType\":\"struct ArtBlocksBroker.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_artBlocksProjectIds\",\"type\":\"uint256[]\"}],\"name\":\"viewOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"priceInWeiEach\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"quantity\",\"type\":\"uint128\"}],\"internalType\":\"struct ArtBlocksBroker.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"],"sourceRoot":""}